    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // üõí SISTEMA DE VENTAS POS - VERSI√ìN LIMPIA SIN ERRORES
        let carritoVenta = [];
        let productosEncontradosCache = [];
        let timerBusqueda = null;

        // Funci√≥n para obtener token CSRF
        function getCSRFToken() {
            const metaToken = document.querySelector('meta[name="csrf-token"]');
            return metaToken ? metaToken.getAttribute('content') : '';
        }

        // ‚úÖ FUNCIONES PRINCIPALES DE B√öSQUEDA
        function buscarProducto() {
            const input = document.getElementById('buscarProducto');
            if (!input) return;

            const termino = input.value.trim();
            if (!termino) {
                mostrarMensaje('warning', 'Ingrese un t√©rmino de b√∫squeda');
                return;
            }

            ejecutarBusqueda(termino);
        }

        function buscarProductoEnter(event) {
            if (event && event.key === 'Enter') {
                event.preventDefault();
                buscarProducto();
            }
        }

        function buscarProductoTiempoReal(event) {
            if (timerBusqueda) {
                clearTimeout(timerBusqueda);
            }

            const termino = event.target.value.trim();
            
            if (!termino) {
                ocultarResultados();
                return;
            }

            timerBusqueda = setTimeout(() => {
                if (termino.length >= 2) {
                    ejecutarBusqueda(termino);
                }
            }, 800);
        }

        function ejecutarBusqueda(termino) {
            const token = getCSRFToken();
            mostrarMensaje('info', 'Buscando "' + termino + '"...');

            fetch('/ventas-buscar-producto?q=' + encodeURIComponent(termino), {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-TOKEN': token
                },
                credentials: 'same-origin'
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error ' + response.status);
                }
                return response.json();
            })
            .then(productos => {
                productosEncontradosCache = productos;
                mostrarProductos(productos);
            })
            .catch(error => {
                console.error('Error:', error);
                mostrarMensaje('error', 'Error: ' + error.message);
                ocultarResultados();
            });
        }

        function mostrarProductos(productos) {
            const contenedor = document.getElementById('listaProductosEncontrados');
            const seccion = document.getElementById('productosEncontrados');

            if (!contenedor || !seccion) return;

            if (productos.length === 0) {
                mostrarMensaje('info', 'No se encontraron productos');
                seccion.style.display = 'none';
                return;
            }

            let html = '';
            productos.forEach(producto => {
                const precio = parseFloat(producto.precio) || 0;
                const stock = parseInt(producto.stock) || 0;
                
                html += '<div class="col-md-6 mb-3">';
                html += '<div class="card h-100">';
                html += '<div class="card-body p-3">';
                html += '<h6 class="text-primary fw-bold">' + (producto.nombre || 'Sin nombre') + '</h6>';
                html += '<p class="small text-muted mb-2">';
                html += 'C√≥digo: ' + (producto.codigo || 'N/A') + '<br>';
                html += 'Marca: ' + (producto.marca || 'Sin marca') + '<br>';
                html += 'Stock: ' + stock;
                html += '</p>';
                html += '<div class="d-flex justify-content-between align-items-center">';
                html += '<span class="badge bg-success">S/ ' + precio.toFixed(2) + '</span>';
                html += '<button class="btn btn-primary btn-sm" onclick="agregarAlCarrito(' + producto.id + ')" type="button">Agregar</button>';
                html += '</div>';
                html += '</div>';
                html += '</div>';
                html += '</div>';
            });

            contenedor.innerHTML = html;
            seccion.style.display = 'block';
            mostrarMensaje('success', productos.length + ' producto(s) encontrado(s)');
        }

        // ‚úÖ FUNCIONES DEL CARRITO
        function agregarAlCarrito(productoId) {
            const producto = productosEncontradosCache.find(p => p.id == productoId);
            if (!producto) {
                mostrarMensaje('error', 'Producto no encontrado');
                return;
            }

            const cantidadInput = document.getElementById('cantidadProducto');
            const cantidad = parseInt(cantidadInput ? cantidadInput.value : 1) || 1;
            const stockDisponible = parseInt(producto.stock) || 0;

            if (cantidad > stockDisponible) {
                mostrarMensaje('error', 'Stock insuficiente. Disponible: ' + stockDisponible);
                return;
            }

            const itemExistente = carritoVenta.find(item => item.id == productoId);
            
            if (itemExistente) {
                const nuevaCantidad = itemExistente.cantidad + cantidad;
                if (nuevaCantidad > stockDisponible) {
                    mostrarMensaje('error', 'Stock insuficiente. Ya tienes ' + itemExistente.cantidad + ' en el carrito.');
                    return;
                }
                itemExistente.cantidad = nuevaCantidad;
            } else {
                carritoVenta.push({
                    id: producto.id,
                    codigo: producto.codigo || 'N/A',
                    nombre: producto.nombre || 'Sin nombre',
                    precio: parseFloat(producto.precio) || 0,
                    cantidad: cantidad,
                    marca: producto.marca || 'Sin marca',
                    stock: stockDisponible
                });
            }

            actualizarCarrito();
            mostrarMensaje('success', producto.nombre + ' agregado al carrito');
            
            if (cantidadInput) cantidadInput.value = '1';
        }

        function actualizarCarrito() {
            const tbody = document.getElementById('carritoBody');
            const cantidadItems = document.getElementById('cantidadItems');
            
            if (!tbody || !cantidadItems) return;

            if (carritoVenta.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5" class="text-center text-muted py-4"><i class="bi bi-cart-x" style="font-size: 2rem;"></i><br>Carrito vac√≠o - Agrega productos</td></tr>';
                cantidadItems.textContent = '0 items';
                calcularTotales();
                habilitarBotonProcesar();
                return;
            }

            let html = '';
            carritoVenta.forEach((item, index) => {
                const subtotal = item.precio * item.cantidad;
                html += '<tr>';
                html += '<td><strong>' + item.nombre + '</strong><br><small class="text-muted">' + item.marca + ' - ' + item.codigo + '</small></td>';
                html += '<td class="text-center">';
                html += '<div class="input-group input-group-sm" style="width: 100px;">';
                html += '<button class="btn btn-outline-secondary" onclick="cambiarCantidad(' + index + ', -1)" type="button">-</button>';
                html += '<input type="number" class="form-control text-center" value="' + item.cantidad + '" readonly>';
                html += '<button class="btn btn-outline-secondary" onclick="cambiarCantidad(' + index + ', 1)" type="button">+</button>';
                html += '</div>';
                html += '</td>';
                html += '<td class="text-center">S/ ' + item.precio.toFixed(2) + '</td>';
                html += '<td class="text-center text-success fw-bold">S/ ' + subtotal.toFixed(2) + '</td>';
                html += '<td class="text-center"><button class="btn btn-outline-danger btn-sm" onclick="eliminarDelCarrito(' + index + ')" type="button"><i class="bi bi-trash"></i></button></td>';
                html += '</tr>';
            });

            tbody.innerHTML = html;
            
            const totalItems = carritoVenta.reduce((sum, item) => sum + item.cantidad, 0);
            cantidadItems.textContent = totalItems + ' items';
            
            calcularTotales();
            habilitarBotonProcesar();
        }

        function cambiarCantidad(index, cambio) {
            if (index < 0 || index >= carritoVenta.length) return;
            
            const item = carritoVenta[index];
            const nuevaCantidad = item.cantidad + cambio;

            if (nuevaCantidad <= 0) {
                eliminarDelCarrito(index);
                return;
            }

            if (nuevaCantidad > item.stock) {
                mostrarMensaje('warning', 'Stock m√°ximo disponible: ' + item.stock);
                return;
            }

            item.cantidad = nuevaCantidad;
            actualizarCarrito();
        }

        function eliminarDelCarrito(index) {
            if (index >= 0 && index < carritoVenta.length) {
                const item = carritoVenta[index];
                carritoVenta.splice(index, 1);
                actualizarCarrito();
                mostrarMensaje('info', item.nombre + ' eliminado del carrito');
            }
        }

        function calcularTotales() {
            const subtotal = carritoVenta.reduce((sum, item) => sum + (item.precio * item.cantidad), 0);
            const igv = subtotal * 0.18;
            const total = subtotal + igv;

            const subtotalEl = document.getElementById('subtotalVenta');
            const igvEl = document.getElementById('igvVenta');
            const totalEl = document.getElementById('totalVenta');

            if (subtotalEl) subtotalEl.textContent = 'S/ ' + subtotal.toFixed(2);
            if (igvEl) igvEl.textContent = 'S/ ' + igv.toFixed(2);
            if (totalEl) totalEl.textContent = 'S/ ' + total.toFixed(2);
        }

        function limpiarVenta() {
            carritoVenta = [];
            actualizarCarrito();
            
            const buscarInput = document.getElementById('buscarProducto');
            const cantidadInput = document.getElementById('cantidadProducto');
            const clienteSelect = document.getElementById('clienteSelect');
            const tipoPago = document.getElementById('tipoPago');
            
            if (buscarInput) buscarInput.value = '';
            if (cantidadInput) cantidadInput.value = '1';
            if (clienteSelect) clienteSelect.value = '';
            if (tipoPago) tipoPago.value = 'efectivo';
            
            ocultarResultados();
            
            const infoDiv = document.getElementById('infoCliente');
            if (infoDiv) infoDiv.style.display = 'none';
            
            mostrarMensaje('info', 'Venta limpiada correctamente');
        }

        function seleccionarCliente() {
            const select = document.getElementById('clienteSelect');
            const infoDiv = document.getElementById('infoCliente');
            const infoSpan = document.getElementById('clienteInfo');

            if (!select || !infoDiv || !infoSpan) return;

            if (select.value === 'general') {
                infoSpan.textContent = 'Cliente General';
                infoDiv.style.display = 'block';
            } else if (select.value) {
                infoSpan.textContent = 'Cliente: ' + select.options[select.selectedIndex].text;
                infoDiv.style.display = 'block';
            } else {
                infoDiv.style.display = 'none';
            }
            
            habilitarBotonProcesar();
        }

        function habilitarBotonProcesar() {
            const btnProcesar = document.getElementById('btnProcesarVenta');
            const clienteSelect = document.getElementById('clienteSelect');
            
            if (!btnProcesar) return;
            
            const tieneProductos = carritoVenta.length > 0;
            const tieneCliente = clienteSelect && clienteSelect.value;
            
            if (tieneProductos && tieneCliente) {
                btnProcesar.disabled = false;
                btnProcesar.classList.remove('btn-secondary');
                btnProcesar.classList.add('btn-success');
            } else {
                btnProcesar.disabled = true;
                btnProcesar.classList.remove('btn-success');
                btnProcesar.classList.add('btn-secondary');
            }
        }

        // ‚úÖ PROCESAR VENTA
        function procesarVenta() {
            if (carritoVenta.length === 0) {
                mostrarMensaje('warning', 'Agrega productos al carrito');
                return;
            }

            const clienteSelect = document.getElementById('clienteSelect');
            const tipoPago = document.getElementById('tipoPago');
            
            if (!clienteSelect || !clienteSelect.value) {
                mostrarMensaje('warning', 'Selecciona un cliente');
                return;
            }

            const btnProcesar = document.getElementById('btnProcesarVenta');
            const originalText = btnProcesar.innerHTML;
            btnProcesar.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Procesando...';
            btnProcesar.disabled = true;

            const subtotal = carritoVenta.reduce((sum, item) => sum + (item.precio * item.cantidad), 0);
            const igv = subtotal * 0.18;
            const total = subtotal + igv;

            const ventaData = {
                cliente_id: clienteSelect.value === 'general' ? null : clienteSelect.value,
                tipo_pago: tipoPago ? tipoPago.value : 'efectivo',
                productos: carritoVenta.map(item => ({
                    producto_id: item.id,
                    cantidad: item.cantidad,
                    precio_unitario: item.precio
                })),
                subtotal: subtotal,
                igv: igv,
                total: total,
                _token: getCSRFToken()
            };

            fetch('/ventas', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-TOKEN': ventaData._token
                },
                credentials: 'same-origin',
                body: JSON.stringify(ventaData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    mostrarMensaje('success', 'Venta procesada exitosamente!');
                    generarTicketVenta(data.venta, ventaData);
                    
                    setTimeout(() => {
                        limpiarVenta();
                        const modal = bootstrap.Modal.getInstance(document.getElementById('nuevaVentaModal'));
                        if (modal) modal.hide();
                        setTimeout(() => window.location.reload(), 1000);
                    }, 2000);
                } else {
                    mostrarMensaje('error', data.message || 'Error al procesar la venta');
                }
            })
            .catch(error => {
                mostrarMensaje('error', 'Error: ' + error.message);
            })
            .finally(() => {
                btnProcesar.innerHTML = originalText;
                btnProcesar.disabled = false;
                habilitarBotonProcesar();
            });
        }

        // ‚úÖ GENERAR TICKET SIMPLE
        function generarTicketVenta(venta, datosVenta) {
            try {
                const fechaActual = new Date().toLocaleString('es-PE');
                const numeroVenta = venta.numero_ticket || 'V' + Date.now();
                
                let productosHTML = '';
                carritoVenta.forEach(item => {
                    const subtotal = item.precio * item.cantidad;
                    productosHTML += '<tr><td>' + item.nombre + '</td><td>' + item.cantidad + '</td><td>S/ ' + item.precio.toFixed(2) + '</td><td>S/ ' + subtotal.toFixed(2) + '</td></tr>';
                });

                const clienteSelect = document.getElementById('clienteSelect');
                let clienteNombre = 'Cliente General';
                if (clienteSelect && clienteSelect.value && clienteSelect.value !== 'general') {
                    clienteNombre = clienteSelect.options[clienteSelect.selectedIndex].text;
                }

                const ticketHTML = '<!DOCTYPE html><html><head><title>Ticket</title><style>body{font-family:monospace;padding:20px;font-size:12px}table{width:100%;border-collapse:collapse;margin:10px 0}th,td{border:1px solid #ddd;padding:8px;text-align:left}th{background:#f0f0f0}.header{text-align:center;margin-bottom:20px}.totales{margin-top:20px;font-weight:bold}@media print{.no-print{display:none}}</style></head><body><div class="header"><h2>üè• FARMACIA MAGISTRAL</h2><p>RUC: 20123456789<br>Av. Principal 123 - Lima<br>Tel: (01) 234-5678</p></div><hr><p><strong>Ticket:</strong> ' + numeroVenta + '<br><strong>Fecha:</strong> ' + fechaActual + '<br><strong>Cliente:</strong> ' + clienteNombre + '<br><strong>Tipo Pago:</strong> ' + datosVenta.tipo_pago.toUpperCase() + '</p><hr><table><thead><tr><th>Producto</th><th>Cant.</th><th>Precio</th><th>Total</th></tr></thead><tbody>' + productosHTML + '</tbody></table><hr><div class="totales"><p>SUBTOTAL: S/ ' + datosVenta.subtotal.toFixed(2) + '</p><p>IGV (18%): S/ ' + datosVenta.igv.toFixed(2) + '</p><p style="font-size:16px">TOTAL: S/ ' + datosVenta.total.toFixed(2) + '</p></div><hr><div style="text-align:center;margin-top:20px"><p><strong>¬°GRACIAS POR SU COMPRA!</strong></p><p>üíä Su salud es nuestra prioridad üíä</p></div><div class="no-print" style="text-align:center;margin-top:20px"><button onclick="window.print()" style="padding:10px 20px;background:#28a745;color:white;border:none;border-radius:5px;cursor:pointer;margin:5px">üñ®Ô∏è Imprimir</button><button onclick="window.close()" style="padding:10px 20px;background:#dc3545;color:white;border:none;border-radius:5px;cursor:pointer;margin:5px">‚ùå Cerrar</button></div><script>setTimeout(function(){window.print()},1000);</script></body></html>';

                const ticketWindow = window.open('', '_blank', 'width=400,height=600');
                if (ticketWindow) {
                    ticketWindow.document.write(ticketHTML);
                    ticketWindow.document.close();
                    mostrarMensaje('success', 'Ticket generado correctamente');
                } else {
                    mostrarMensaje('error', 'Error al abrir ventana del ticket');
                }
            } catch (error) {
                mostrarMensaje('error', 'Error al generar el ticket de venta');
            }
        }

        // ‚úÖ FUNCIONES AUXILIARES
        function ocultarResultados() {
            const seccion = document.getElementById('productosEncontrados');
            if (seccion) seccion.style.display = 'none';
        }

        function mostrarMensaje(tipo, mensaje) {
            console.log(tipo.toUpperCase() + ': ' + mensaje);
            
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-' + (tipo === 'error' ? 'danger' : tipo) + ' alert-dismissible fade show position-fixed';
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = mensaje + '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>';
            
            document.body.appendChild(alertDiv);
            
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 4000);
        }

        // ‚úÖ FUNCIONES DE DEBUG
        function debugBusquedaCompleta() {
            console.log('üö® DEBUG INICIADO');
            const input = document.getElementById('buscarProducto');
            if (input) {
                input.value = 'para';
                buscarProducto();
            }
        }

        function diagnosticarBusqueda() {
            mostrarMensaje('info', 'Probando b√∫squeda de productos...');
            const input = document.getElementById('buscarProducto');
            if (input) {
                input.value = 'para';
                buscarProducto();
            }
        }

        function mostrarEstadisticasBusqueda() {
            const mensaje = 'üìä ESTADO DEL SISTEMA:\n\n‚Ä¢ Carrito actual: ' + carritoVenta.length + ' productos\n‚Ä¢ Productos encontrados: ' + productosEncontradosCache.length + '\n‚Ä¢ Token CSRF: ' + (getCSRFToken() ? 'Disponible' : 'No disponible');
            alert(mensaje);
        }

        // ‚úÖ OTRAS FUNCIONES
        function buscarVenta() { 
            const ticket = prompt('Ingrese el n√∫mero de ticket:');
            if (ticket) mostrarMensaje('info', 'Buscando ticket: ' + ticket);
        }
        
        function reporteVentas() { 
            alert('üìä Reporte de ventas del d√≠a');
        }
        
        function verTicket(id) { mostrarMensaje('info', 'Ver ticket ' + id); }
        function imprimirTicket(id) { mostrarMensaje('info', 'Imprimir ticket ' + id); }
        function anularVenta(id, ticket) { 
            if (confirm('¬øAnular venta ' + ticket + '?')) {
                mostrarMensaje('info', 'Anular venta ' + ticket);
            }
        }
        
        function mostrarModalCerrarSesion() { 
            const modal = new bootstrap.Modal(document.getElementById('modalCerrarSesion'));
            modal.show();
        }
        
        function ejecutarCerrarSesion() { 
            document.getElementById('logout-form-ventas').submit();
        }

        // ‚úÖ INICIALIZACI√ìN
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üöÄ Sistema POS cargado sin errores');
            
            const modal = document.getElementById('nuevaVentaModal');
            if (modal) {
                modal.addEventListener('shown.bs.modal', function() {
                    const buscarInput = document.getElementById('buscarProducto');
                    if (buscarInput) buscarInput.focus();
                    limpiarVenta();
                    habilitarBotonProcesar();
                });
            }
        });
    </script>
</body>
</html> 